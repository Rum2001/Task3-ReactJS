[{"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\index.js":"1","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\App.js":"2","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\utils\\audio.js":"3","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\stores\\store.ts":"4","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\Game.tsx":"5","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\MainMenu\\MainMenu.jsx":"6","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\JoinServer\\JoinServer.jsx":"7","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\CreateUser\\CreateUser.jsx":"8","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\CreateServer\\CreateServer.jsx":"9","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\WaitingLobby\\Lobby.jsx":"10","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\StartPage\\StartPage.jsx":"11","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Loading\\Loading.jsx":"12","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\ErrorBoundary\\ErrorBoundary.jsx":"13","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\RightStack\\RightStack.jsx":"14","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\LeftStack\\LeftStack.jsx":"15","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\TableStack\\TableStack.jsx":"16","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\PlayerStack\\PlayerStack.jsx":"17","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\TopStack\\TopStack.jsx":"18","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\DrawingStack\\DrawingStack.jsx":"19","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\Scoreboard\\Scoreboard.jsx":"20","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\api\\API.ts":"21","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\stores\\features\\gameSlice.ts":"22","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\utils\\hooks.ts":"23","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\utils\\loader.ts":"24","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\CreateUser\\ReChoiceIcon.jsx":"25","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\WaitingLobby\\Loding.jsx":"26","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\api\\socket.js":"27","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Paper\\Paper.jsx":"28","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Button\\Button.jsx":"29","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Typography\\Typography.jsx":"30","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\TextField\\TextField.jsx":"31","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Avatar\\Avatar.jsx":"32","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Switch\\Switch.jsx":"33","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Table\\Table.jsx":"34","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\utils\\helpers.js":"35","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Server\\OnlineServer.ts":"36","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Server\\OfflineServer.ts":"37","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\DrawingStack\\FrontCards.jsx":"38","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Card\\Card.jsx":"39","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\CardsRow\\CardsRow.jsx":"40","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\utils\\EventsObject.js":"41","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\BotsServer\\BotsServer.ts":"42","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\CardsColumn\\CardsColumn.jsx":"43","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Image\\Image.jsx":"44"},{"size":480,"mtime":1669580774503,"results":"45","hashOfConfig":"46"},{"size":2671,"mtime":1669580774484,"results":"47","hashOfConfig":"46"},{"size":1344,"mtime":1669580774506,"results":"48","hashOfConfig":"46"},{"size":301,"mtime":1669580774505,"results":"49","hashOfConfig":"46"},{"size":2183,"mtime":1669580774489,"results":"50","hashOfConfig":"46"},{"size":3222,"mtime":1669580774494,"results":"51","hashOfConfig":"46"},{"size":5746,"mtime":1669580774493,"results":"52","hashOfConfig":"46"},{"size":2406,"mtime":1669580774486,"results":"53","hashOfConfig":"46"},{"size":3309,"mtime":1669580774486,"results":"54","hashOfConfig":"46"},{"size":2866,"mtime":1669580774500,"results":"55","hashOfConfig":"46"},{"size":2348,"mtime":1669580774500,"results":"56","hashOfConfig":"46"},{"size":1489,"mtime":1669580774497,"results":"57","hashOfConfig":"46"},{"size":1581,"mtime":1669580774496,"results":"58","hashOfConfig":"46"},{"size":607,"mtime":1669580774490,"results":"59","hashOfConfig":"46"},{"size":605,"mtime":1669580774489,"results":"60","hashOfConfig":"46"},{"size":958,"mtime":1669580774492,"results":"61","hashOfConfig":"46"},{"size":711,"mtime":1669580774490,"results":"62","hashOfConfig":"46"},{"size":597,"mtime":1669580774492,"results":"63","hashOfConfig":"46"},{"size":2740,"mtime":1669580774488,"results":"64","hashOfConfig":"46"},{"size":1674,"mtime":1669580774491,"results":"65","hashOfConfig":"46"},{"size":2461,"mtime":1669580774502,"results":"66","hashOfConfig":"46"},{"size":6651,"mtime":1669580774505,"results":"67","hashOfConfig":"46"},{"size":414,"mtime":1669580774507,"results":"68","hashOfConfig":"46"},{"size":2123,"mtime":1669580774507,"results":"69","hashOfConfig":"46"},{"size":988,"mtime":1669580774487,"results":"70","hashOfConfig":"46"},{"size":950,"mtime":1669580774501,"results":"71","hashOfConfig":"46"},{"size":134,"mtime":1669580774503,"results":"72","hashOfConfig":"46"},{"size":1103,"mtime":1669580774498,"results":"73","hashOfConfig":"46"},{"size":1315,"mtime":1669580774495,"results":"74","hashOfConfig":"46"},{"size":325,"mtime":1669580774499,"results":"75","hashOfConfig":"46"},{"size":625,"mtime":1669580774499,"results":"76","hashOfConfig":"46"},{"size":682,"mtime":1669580774495,"results":"77","hashOfConfig":"46"},{"size":1830,"mtime":1669580774498,"results":"78","hashOfConfig":"46"},{"size":1328,"mtime":1669580774499,"results":"79","hashOfConfig":"46"},{"size":544,"mtime":1669580774506,"results":"80","hashOfConfig":"46"},{"size":3270,"mtime":1669580774501,"results":"81","hashOfConfig":"46"},{"size":3067,"mtime":1669580774501,"results":"82","hashOfConfig":"46"},{"size":567,"mtime":1669580774489,"results":"83","hashOfConfig":"46"},{"size":5446,"mtime":1669582745151,"results":"84","hashOfConfig":"46"},{"size":1279,"mtime":1669580774488,"results":"85","hashOfConfig":"46"},{"size":899,"mtime":1669580774506,"results":"86","hashOfConfig":"46"},{"size":6778,"mtime":1669580774485,"results":"87","hashOfConfig":"46"},{"size":1258,"mtime":1669580774487,"results":"88","hashOfConfig":"46"},{"size":484,"mtime":1669580774497,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"qmmqh0",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"99"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\index.js",[],["181","182"],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\App.js",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\utils\\audio.js",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\stores\\store.ts",[],["183","184"],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\Game.tsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\MainMenu\\MainMenu.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\JoinServer\\JoinServer.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\CreateUser\\CreateUser.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\CreateServer\\CreateServer.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\WaitingLobby\\Lobby.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\StartPage\\StartPage.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Loading\\Loading.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\ErrorBoundary\\ErrorBoundary.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\RightStack\\RightStack.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\LeftStack\\LeftStack.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\TableStack\\TableStack.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\PlayerStack\\PlayerStack.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\TopStack\\TopStack.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\DrawingStack\\DrawingStack.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\Scoreboard\\Scoreboard.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\api\\API.ts",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\stores\\features\\gameSlice.ts",["185"],"import { createSlice, PayloadAction, current } from \"@reduxjs/toolkit\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { canPlayCard } from \"../../BotsServer/BotsServer\";\r\nimport { wrapMod } from \"../../utils/helpers\";\r\nimport { Card, Player } from \"../../utils/interfaces\";\r\n\r\ninterface StoreState {\r\n  playerId: string;\r\n  currentPlayer: number;\r\n  nextPlayre: number;\r\n  orderOffset: number;\r\n  direction: number;\r\n  tableStack: Card[];\r\n  drawingStack: Card[];\r\n  players: Player[];\r\n  lastPlayerDrawed: boolean;\r\n  inGame: boolean;\r\n  inLobby: boolean;\r\n}\r\n\r\nlet cardLayoutIdIdx = 111;\r\n\r\nfunction generateDrawingCards(cnt: number) {\r\n  return Array(cnt)\r\n    .fill(0)\r\n    .map((i) => ({ layoutId: `id_${cardLayoutIdIdx++}` }));\r\n}\r\n\r\nconst initialState = {\r\n  tableStack: [] as Card[],\r\n  drawingStack: [] as Card[],\r\n  inGame: false,\r\n} as StoreState;\r\n\r\nexport const gameSlice = createSlice({\r\n  name: \"game\",\r\n  initialState,\r\n  reducers: {\r\n    setPlayerId(state, action: PayloadAction<string>) {\r\n      state.playerId = action.payload;\r\n    },\r\n    init: (\r\n      state,\r\n      action: PayloadAction<{ players: Player[]; cards: Card[] }>\r\n    ) => {\r\n      const { players, cards: startingCards } = action.payload;\r\n      state.direction = 1;\r\n      state.tableStack = [];\r\n      state.lastPlayerDrawed = false;\r\n      state.tableStack = [];\r\n      state.inGame = true;\r\n\r\n      // Find my player and re-order\r\n      let playersFinal: Player[] = [];\r\n      let myIdx = 0;\r\n      while (myIdx < players.length) {\r\n        if (players[myIdx].id === state.playerId) break;\r\n        myIdx++;\r\n      }\r\n\r\n      for (let i = myIdx; i < players.length; i++) {\r\n        playersFinal.push(players[i]);\r\n      }\r\n      state.currentPlayer = playersFinal.length % players.length;\r\n      for (let i = 0; i < myIdx; i++) {\r\n        playersFinal.push(players[i]);\r\n      }\r\n\r\n      //Set Cards for players\r\n      let cardsToDistribute: Card[] = startingCards.map((c) => ({\r\n        ...c,\r\n        layoutId: `id_${cardLayoutIdIdx++}`,\r\n        rotationY: 0,\r\n        playable: myIdx === 0,\r\n        forPlayer: 0,\r\n      }));\r\n\r\n      for (let i = 1; i < playersFinal.length; i++) {\r\n        cardsToDistribute = cardsToDistribute.concat(\r\n          Array(startingCards.length)\r\n            .fill(0)\r\n            .map(() => ({\r\n              layoutId: `id_${cardLayoutIdIdx++}`,\r\n              forPlayer: i,\r\n            }))\r\n        );\r\n      }\r\n      state.players = playersFinal;\r\n      state.drawingStack = cardsToDistribute.concat(generateDrawingCards(20));\r\n      state.orderOffset = myIdx;\r\n    },\r\n\r\n    ready(state) {\r\n      state.players = state.players.map((player, idx) => {\r\n        return {\r\n          ...player,\r\n          cards: state.drawingStack.filter((c) => c.forPlayer === idx),\r\n        };\r\n      });\r\n\r\n      state.drawingStack = state.drawingStack.filter((c) =>\r\n        isNullOrUndefined(c.forPlayer)\r\n      );\r\n    },\r\n\r\n    stopGame(state) {\r\n      state.inGame = false;\r\n    },\r\n\r\n    setInLobby(state, action: PayloadAction<boolean>) {\r\n      state.inLobby = action.payload;\r\n    },\r\n\r\n    moveCard(\r\n      state,\r\n      action: PayloadAction<{\r\n        nextPlayer: number;\r\n        card?: Card;\r\n        draw?: number;\r\n        cardsToDraw?: Card[];\r\n      }>\r\n    ) {\r\n      let { nextPlayer, card, cardsToDraw = [], draw } = action.payload;\r\n\r\n      const curPlayerObj = state.players[state.currentPlayer];\r\n\r\n      nextPlayer = wrapMod(\r\n        nextPlayer - state.orderOffset,\r\n        state.players.length\r\n      );\r\n\r\n      if (card?.action === \"reverse\") state.direction *= -1;\r\n\r\n      if (draw) {\r\n        state.players = state.players.map((p) => {\r\n          if (p.id === curPlayerObj.id) {\r\n            let newCards = state.drawingStack.slice(0, draw);\r\n            if (curPlayerObj.id === state.playerId && cardsToDraw) {\r\n              newCards = newCards.map((c, idx) => ({\r\n                ...c,\r\n                ...cardsToDraw[idx],\r\n                rotationY: 0,\r\n              }));\r\n            }\r\n            return {\r\n              ...p,\r\n              cards: p.cards.concat(newCards),\r\n            };\r\n          }\r\n          return p;\r\n        });\r\n        state.drawingStack = state.drawingStack\r\n          .slice(draw)\r\n          .concat(generateDrawingCards(draw));\r\n        state.lastPlayerDrawed = true;\r\n      }\r\n\r\n      if (card) {\r\n        let layoutId: string | undefined = \"\";\r\n        let shouldFlip = false;\r\n        if (curPlayerObj.id !== state.playerId) {\r\n          layoutId =\r\n            curPlayerObj.cards[\r\n              Math.floor(Math.random() * curPlayerObj.cards.length)\r\n            ].layoutId;\r\n          shouldFlip = true;\r\n        } else {\r\n          layoutId = curPlayerObj.cards.find((c) => c.id === card?.id)\r\n            ?.layoutId;\r\n          const cardToMove = curPlayerObj.cards.filter(\r\n            (c) => c.layoutId === layoutId\r\n          )[0];\r\n          console.log(layoutId, current(cardToMove));\r\n\r\n          card.color = cardToMove.color;\r\n          card.action = cardToMove.action;\r\n          card.digit = cardToMove.digit;\r\n        }\r\n\r\n        state.tableStack = [\r\n          ...state.tableStack.slice(-1),\r\n          {\r\n            layoutId,\r\n            color: card.color,\r\n            action: card.action,\r\n            digit: card.digit,\r\n            flip: shouldFlip,\r\n            rotationY: 0,\r\n          },\r\n        ];\r\n        state.players = state.players.map((p) => {\r\n          if (p === curPlayerObj) {\r\n            return {\r\n              ...p,\r\n              cards: p.cards.filter((c) => c.layoutId !== layoutId),\r\n            };\r\n          }\r\n          return p;\r\n        });\r\n        state.lastPlayerDrawed = false;\r\n      }\r\n\r\n      state.nextPlayre = nextPlayer;\r\n    },\r\n    movePlayer(state) {\r\n      state.players = state.players.map((p) => {\r\n        if (p.id === state.playerId) {\r\n          const myTurn = state.nextPlayre === 0;\r\n\r\n          return {\r\n            ...p,\r\n            cards: p.cards.map((c) => {\r\n              return {\r\n                ...c,\r\n                playable:\r\n                  myTurn &&\r\n                  canPlayCard(\r\n                    state.tableStack[state.tableStack.length - 1],\r\n                    c,\r\n                    state.lastPlayerDrawed\r\n                  ),\r\n              };\r\n            }),\r\n          };\r\n        }\r\n        return p;\r\n      });\r\n      state.currentPlayer = state.nextPlayre;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  init,\r\n  ready,\r\n  stopGame,\r\n  moveCard,\r\n  movePlayer,\r\n  setInLobby,\r\n  setPlayerId,\r\n} = gameSlice.actions;\r\n\r\nexport default gameSlice.reducer;\r\n","C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\utils\\hooks.ts",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\utils\\loader.ts",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\CreateUser\\ReChoiceIcon.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\WaitingLobby\\Loding.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\api\\socket.js",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Paper\\Paper.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Button\\Button.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Typography\\Typography.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\TextField\\TextField.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Avatar\\Avatar.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Switch\\Switch.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Table\\Table.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\utils\\helpers.js",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Server\\OnlineServer.ts",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Server\\OfflineServer.ts",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\DrawingStack\\FrontCards.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Card\\Card.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\CardsRow\\CardsRow.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\utils\\EventsObject.js",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\BotsServer\\BotsServer.ts",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Game\\CardsColumn\\CardsColumn.jsx",[],"C:\\Users\\NCC\\Desktop\\WorkSpace\\uno\\src\\Components\\Shared\\Image\\Image.jsx",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":82,"column":18,"nodeType":"192","messageId":"193","endLine":85,"endColumn":15},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'cardLayoutIdIdx'.","ArrowFunctionExpression","unsafeRefs","no-global-assign","no-unsafe-negation"]