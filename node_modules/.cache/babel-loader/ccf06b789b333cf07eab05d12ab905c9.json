{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NCC\\\\Desktop\\\\WorkSpace\\\\uno\\\\src\\\\Components\\\\Game\\\\Scoreboard\\\\Scoreboard.jsx\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport Avatar from \"../../Shared/Avatar/Avatar\";\nimport { Grid, Typography } from \"@mui/material\";\nimport Button from \"../../Shared/Button/Button\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"../../../utils/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Root = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: rgba(0, 0, 0, 0.8);\n  color: white;\n  padding: 40px 70px;\n  border-radius: 12px;\n  font-size: 2rem;\n  .row {\n    &.me {\n      color: yellow;\n\n      animation: pulse 1s infinite;\n    }\n\n    display: flex;\n    align-items: center;\n    gap: 24px;\n\n    .order {\n      width: 50px;\n      font-size: 1.5rem;\n    }\n\n    .img {\n      width: 50px;\n    }\n  }\n\n  @keyframes pulse {\n    50% {\n      transform: scale(1.05);\n    }\n  }\n`;\n_c = Root;\nexport default function Scoreboard(_ref) {\n  _s();\n\n  let {\n    players\n  } = _ref;\n  const playerId = useSelector(state => state.game.playerId);\n  return /*#__PURE__*/_jsxDEV(Root, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      textAlign: \"center\",\n      fontWeight: 600,\n      mb: 6,\n      children: \"Game Finished!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), players.map((p, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `row ${p.id === playerId && \"me\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order\",\n        children: idx + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          seed: `${p.name}${p.img}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: p.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      mt: 6,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/main-menu\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {},\n          children: \"Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Scoreboard, \"Qd+obcRFrWZxi8Ha/KUIFqm4jj4=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = Scoreboard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Root\");\n$RefreshReg$(_c2, \"Scoreboard\");","map":{"version":3,"sources":["C:/Users/NCC/Desktop/WorkSpace/uno/src/Components/Game/Scoreboard/Scoreboard.jsx"],"names":["styled","Avatar","Grid","Typography","Button","Link","useSelector","Root","div","Scoreboard","players","playerId","state","game","map","p","idx","id","name","img"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,eAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,MAAMC,IAAI,GAAGP,MAAM,CAACQ,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApCA;KAAMD,I;AAsCN,eAAe,SAASE,UAAT,OAAiC;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC9C,QAAMC,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,QAAvB,CAA5B;AAEA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAC,QAAnC;AAA4C,MAAA,UAAU,EAAE,GAAxD;AAA6D,MAAA,EAAE,EAAE,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGD,OAAO,CAACI,GAAR,CAAY,CAACC,CAAD,EAAIC,GAAJ,kBACX;AAAK,MAAA,SAAS,EAAG,OAAMD,CAAC,CAACE,EAAF,KAASN,QAAT,IAAqB,IAAK,EAAjD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,kBAAwBK,GAAG,GAAG;AAA9B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAG,GAAED,CAAC,CAACG,IAAK,GAAEH,CAAC,CAACI,GAAI;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADF,EACwC,GADxC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBAAuBJ,CAAC,CAACG;AAAzB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OAAyDF,GAAzD;AAAA;AAAA;AAAA;AAAA,YADD,CAJH,eAcE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,cAAc,EAAC,QAA/B;AAAwC,MAAA,EAAE,EAAE,CAA5C;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,YAAT;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAM,CAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAzBuBP,U;UACLH,W;;;MADKG,U","sourcesContent":["import styled from \"styled-components\";\r\nimport Avatar from \"../../Shared/Avatar/Avatar\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport Button from \"../../Shared/Button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"../../../utils/hooks\";\r\n\r\nconst Root = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: rgba(0, 0, 0, 0.8);\r\n  color: white;\r\n  padding: 40px 70px;\r\n  border-radius: 12px;\r\n  font-size: 2rem;\r\n  .row {\r\n    &.me {\r\n      color: yellow;\r\n\r\n      animation: pulse 1s infinite;\r\n    }\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 24px;\r\n\r\n    .order {\r\n      width: 50px;\r\n      font-size: 1.5rem;\r\n    }\r\n\r\n    .img {\r\n      width: 50px;\r\n    }\r\n  }\r\n\r\n  @keyframes pulse {\r\n    50% {\r\n      transform: scale(1.05);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Scoreboard({ players }) {\r\n  const playerId = useSelector((state) => state.game.playerId);\r\n\r\n  return (\r\n    <Root>\r\n      <Typography variant=\"h2\" textAlign=\"center\" fontWeight={600} mb={6}>\r\n        Game Finished!!\r\n      </Typography>\r\n      {players.map((p, idx) => (\r\n        <div className={`row ${p.id === playerId && \"me\"}`} key={idx}>\r\n          <div className=\"order\">{idx + 1}</div>\r\n          <div className=\"img\">\r\n            <Avatar seed={`${p.name}${p.img}`} />{\" \"}\r\n          </div>\r\n          <div className=\"name\">{p.name}</div>\r\n        </div>\r\n      ))}\r\n\r\n      <Grid container justifyContent=\"center\" mt={6}>\r\n        <Link to=\"/main-menu\">\r\n          <Button onClick={() => {}}>Play Again</Button>\r\n        </Link>\r\n      </Grid>\r\n    </Root>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}