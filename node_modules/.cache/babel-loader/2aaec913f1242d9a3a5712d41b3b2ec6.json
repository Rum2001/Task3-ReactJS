{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NCC\\\\Desktop\\\\WorkSpace\\\\uno\\\\src\\\\Components\\\\JoinServer\\\\JoinServer.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Paper from \"../Shared/Paper/Paper\";\nimport Stack from \"@mui/material/Stack\";\nimport Table from \"../Shared/Table/Table\";\nimport Button from \"../Shared/Button/Button\";\nimport TextField from \"../Shared/TextField/TextField\";\nimport Typography from \"../Shared/Typography/Typography\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"../../utils/hooks\";\nimport { setInLobby, setPlayerId } from \"../../stores/features/gameSlice\";\nimport API from \"../../api/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CTableRow = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  // display: grid;\n  // grid-template-columns: repeat(3, 1fr);\n  border-radius: 2rem;\n  height: 45px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n_c = CTableRow;\nconst CTableCell = styled.p`\n  height: 30px;\n  width: calc(100% / 3);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c2 = CTableCell;\n\nconst JoinServer = () => {\n  _s();\n\n  const [showPrivate, setShowPrivate] = React.useState(true);\n  const [selectedServer, setSelectedServer] = React.useState(null);\n  const [password, setPassword] = React.useState(null); //for show button\n\n  const [selectOne, setSelectOne] = React.useState(false); //for show button\n\n  const [isPrivate, setIsPrivate] = React.useState(false);\n  const [servers, setServers] = React.useState([]);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  React.useEffect(() => {\n    API.playOnline(true);\n\n    (async () => {\n      const servers = await API.getServers();\n      setServers(servers);\n    })();\n\n    const interval = setInterval(async () => {\n      const servers = await API.getServers();\n      setServers(servers);\n    }, 4000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const handleJoinServer = async () => {\n    const serverId = servers[selectedServer].id;\n    const playerId = await API.joinServer(serverId, password);\n    dispatch(setPlayerId(playerId));\n    dispatch(setInLobby(true));\n    navigate(\"/waiting-lobby\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      spacing: 5,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"flex-end\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: `${showPrivate ? \" white\" : \"gray\"}`,\n              textShadow: `${showPrivate ? \"0 0 3px white\" : \"\"}`\n            },\n            children: \"Show Private Servers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n            defaultChecked: true,\n            color: \"info\",\n            onChange: () => {\n              setShowPrivate(!showPrivate);\n              setSelectedServer(null);\n              setSelectOne(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: servers.map((server, index) => {\n            console.log(server);\n            return /*#__PURE__*/_jsxDEV(CTableRow, {\n              onClick: () => {\n                setSelectedServer(index);\n                setSelectOne(true);\n                setPassword(\"\");\n                if (server.isPrivate) setIsPrivate(true);else setIsPrivate(false);\n              },\n              style: index === selectedServer && server.isPrivate ? {\n                backgroundColor: \"rgba(0,0,0,.5)\",\n                border: \" 1px solid #fb0303\",\n                borderWidth: \"0 0 3px 2px\",\n                borderRadius: \"1rem\",\n                boxShadow: \"inset 1px 0 5px 1px black\"\n              } : index === selectedServer ? {\n                backgroundColor: \"rgba(0,0,0,.5)\",\n                borderRadius: \"1rem\"\n              } : {},\n              children: index === selectedServer && server.isPrivate ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(CTableCell, {\n                  children: server.serverName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  type: \"password\",\n                  placeholder: \"Enter the server password\",\n                  style: {\n                    height: \"100%\",\n                    border: \"none\",\n                    background: \"none\",\n                    boxShadow: \"none\"\n                  },\n                  value: password,\n                  onChange: e => setPassword(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(CTableCell, {\n                  children: server.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CTableCell, {\n                  children: server.cntPlayers\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CTableCell, {\n                  children: server.isPrivate ? \"Yes\" : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: (selectOne && isPrivate && password || selectOne && !isPrivate) && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleJoinServer,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Join Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JoinServer, \"zvZmMYKc80FgBgHMKRiRv2bMhiU=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c3 = JoinServer;\nexport default JoinServer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CTableRow\");\n$RefreshReg$(_c2, \"CTableCell\");\n$RefreshReg$(_c3, \"JoinServer\");","map":{"version":3,"sources":["C:/Users/NCC/Desktop/WorkSpace/uno/src/Components/JoinServer/JoinServer.jsx"],"names":["React","Grid","Checkbox","Paper","Stack","Table","Button","TextField","Typography","useNavigate","styled","useDispatch","setInLobby","setPlayerId","API","CTableRow","div","CTableCell","p","JoinServer","showPrivate","setShowPrivate","useState","selectedServer","setSelectedServer","password","setPassword","selectOne","setSelectOne","isPrivate","setIsPrivate","servers","setServers","navigate","dispatch","useEffect","playOnline","getServers","interval","setInterval","clearInterval","handleJoinServer","serverId","id","playerId","joinServer","color","textShadow","map","server","index","console","log","backgroundColor","border","borderWidth","borderRadius","boxShadow","serverName","height","background","e","target","value","name","cntPlayers"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Paper from \"../Shared/Paper/Paper\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Table from \"../Shared/Table/Table\";\r\nimport Button from \"../Shared/Button/Button\";\r\nimport TextField from \"../Shared/TextField/TextField\";\r\nimport Typography from \"../Shared/Typography/Typography\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"../../utils/hooks\";\r\nimport { setInLobby, setPlayerId } from \"../../stores/features/gameSlice\";\r\nimport API from \"../../api/API\";\r\n\r\nconst CTableRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  // display: grid;\r\n  // grid-template-columns: repeat(3, 1fr);\r\n  border-radius: 2rem;\r\n  height: 45px;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst CTableCell = styled.p`\r\n  height: 30px;\r\n  width: calc(100% / 3);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst JoinServer = () => {\r\n  const [showPrivate, setShowPrivate] = React.useState(true);\r\n  const [selectedServer, setSelectedServer] = React.useState(null);\r\n\r\n  const [password, setPassword] = React.useState(null); //for show button\r\n  const [selectOne, setSelectOne] = React.useState(false); //for show button\r\n\r\n  const [isPrivate, setIsPrivate] = React.useState(false);\r\n  const [servers, setServers] = React.useState([]);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    API.playOnline(true);\r\n    (async () => {\r\n      const servers = await API.getServers();\r\n      setServers(servers);\r\n    })();\r\n    const interval = setInterval(async () => {\r\n      const servers = await API.getServers();\r\n      setServers(servers);\r\n    }, 4000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const handleJoinServer = async () => {\r\n    const serverId = servers[selectedServer].id;\r\n    const playerId = await API.joinServer(serverId, password);\r\n    dispatch(setPlayerId(playerId));\r\n    dispatch(setInLobby(true));\r\n    navigate(\"/waiting-lobby\");\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={5}>\r\n        <Grid item xs={12}>\r\n          <Stack\r\n            direction=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"flex-end\"\r\n            spacing={2}\r\n          >\r\n            <p\r\n              style={{\r\n                color: `${showPrivate ? \" white\" : \"gray\"}`,\r\n                textShadow: `${showPrivate ? \"0 0 3px white\" : \"\"}`,\r\n              }}\r\n            >\r\n              Show Private Servers\r\n            </p>\r\n            <Checkbox\r\n              defaultChecked\r\n              color=\"info\"\r\n              onChange={() => {\r\n                setShowPrivate(!showPrivate);\r\n                setSelectedServer(null);\r\n                setSelectOne(false);\r\n              }}\r\n            />\r\n          </Stack>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Table>\r\n            {servers.map((server, index) => {\r\n              console.log(server);\r\n              return (\r\n                <CTableRow\r\n                  key={index}\r\n                  onClick={() => {\r\n                    setSelectedServer(index);\r\n                    setSelectOne(true);\r\n                    setPassword(\"\");\r\n                    if (server.isPrivate) setIsPrivate(true);\r\n                    else setIsPrivate(false);\r\n                  }}\r\n                  style={\r\n                    index === selectedServer && server.isPrivate\r\n                      ? {\r\n                          backgroundColor: \"rgba(0,0,0,.5)\",\r\n                          border: \" 1px solid #fb0303\",\r\n                          borderWidth: \"0 0 3px 2px\",\r\n                          borderRadius: \"1rem\",\r\n                          boxShadow: \"inset 1px 0 5px 1px black\",\r\n                        }\r\n                      : index === selectedServer\r\n                      ? {\r\n                          backgroundColor: \"rgba(0,0,0,.5)\",\r\n                          borderRadius: \"1rem\",\r\n                        }\r\n                      : {}\r\n                  }\r\n                >\r\n                  {index === selectedServer && server.isPrivate ? (\r\n                    <>\r\n                      <CTableCell>{server.serverName}</CTableCell>\r\n                      <TextField\r\n                        type=\"password\"\r\n                        placeholder=\"Enter the server password\"\r\n                        style={{\r\n                          height: \"100%\",\r\n                          border: \"none\",\r\n                          background: \"none\",\r\n                          boxShadow: \"none\",\r\n                        }}\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                      />\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <CTableCell>{server.name}</CTableCell>\r\n                      <CTableCell>{server.cntPlayers}</CTableCell>\r\n                      <CTableCell>{server.isPrivate ? \"Yes\" : \"\"}</CTableCell>\r\n                    </>\r\n                  )}\r\n                </CTableRow>\r\n              );\r\n            })}\r\n          </Table>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {((selectOne && isPrivate && password) ||\r\n            (selectOne && !isPrivate)) && (\r\n            <Button onClick={handleJoinServer}>\r\n              <Typography>Join Game</Typography>\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default JoinServer;\r\n"]},"metadata":{},"sourceType":"module"}