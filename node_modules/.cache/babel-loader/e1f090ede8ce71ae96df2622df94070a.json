{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NCC\\\\Desktop\\\\WorkSpace\\\\Task3-ReactJS\\\\src\\\\Components\\\\Game\\\\CardsRow\\\\CardsRow.jsx\";\nimport styled from \"styled-components\";\nimport Card from \"../../Shared/Card/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Root = styled.div`\n  display: flex;\n  justify-content: center;\n\n  filter: ${props => props.highlight ? \"drop-shadow(0 0 10px white)\" : \"brightness(0.6)\"};\n\n  --cardsCnt: ${props => props.cardsCnt};\n  --containerMaxWidth: 55vw;\n  .card-container {\n    &:not(:last-of-type) {\n      margin-right: calc(\n        -1 * max(calc((\n                  var(--cardWidth) * var(--cardsCnt) - var(--containerMaxWidth)\n                ) / (var(--cardsCnt)-1)), calc(var(--cardWidth) / 3))\n      );\n    }\n  }\n`;\n_c = Root;\nexport default function CardsRow(_ref) {\n  let {\n    cards,\n    cardProps,\n    highlight\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Root, {\n    layout: true,\n    cardsCnt: cards.length,\n    highlight: highlight,\n    children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        id: card.id,\n        layoutId: card.layoutId,\n        color: card.color,\n        digit: card.digit,\n        action: card.action,\n        width: 200,\n        flip: card.flip,\n        rotationY: card.rotationY,\n        selectable: cardProps === null || cardProps === void 0 ? void 0 : cardProps.selectable,\n        playable: card.playable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, card.layoutId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c2 = CardsRow;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Root\");\n$RefreshReg$(_c2, \"CardsRow\");","map":{"version":3,"sources":["C:/Users/NCC/Desktop/WorkSpace/Task3-ReactJS/src/Components/Game/CardsRow/CardsRow.jsx"],"names":["styled","Card","Root","div","props","highlight","cardsCnt","CardsRow","cards","cardProps","length","map","card","id","layoutId","color","digit","action","flip","rotationY","selectable","playable"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAEA,MAAMC,IAAI,GAAGF,MAAM,CAACG,GAAI;AACxB;AACA;AACA;AACA,YAAaC,KAAD,IACRA,KAAK,CAACC,SAAN,GAAkB,6BAAlB,GAAkD,iBAAkB;AACxE;AACA,gBAAiBD,KAAD,IAAWA,KAAK,CAACE,QAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;KAAMJ,I;AAoBN,eAAe,SAASK,QAAT,OAAmD;AAAA,MAAjC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBJ,IAAAA;AAApB,GAAiC;AAChE,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,QAAQ,EAAEG,KAAK,CAACE,MAA7B;AAAqC,IAAA,SAAS,EAAEL,SAAhD;AAAA,cACGG,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACT;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,EAAE,EAAEA,IAAI,CAACC,EADX;AAEE,QAAA,QAAQ,EAAED,IAAI,CAACE,QAFjB;AAGE,QAAA,KAAK,EAAEF,IAAI,CAACG,KAHd;AAIE,QAAA,KAAK,EAAEH,IAAI,CAACI,KAJd;AAKE,QAAA,MAAM,EAAEJ,IAAI,CAACK,MALf;AAME,QAAA,KAAK,EAAE,GANT;AAOE,QAAA,IAAI,EAAEL,IAAI,CAACM,IAPb;AAQE,QAAA,SAAS,EAAEN,IAAI,CAACO,SARlB;AASE,QAAA,UAAU,EAAEV,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEW,UATzB;AAUE,QAAA,QAAQ,EAAER,IAAI,CAACS;AAVjB;AAAA;AAAA;AAAA;AAAA;AADF,OAAqCT,IAAI,CAACE,QAA1C;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;MArBuBP,Q","sourcesContent":["import styled from \"styled-components\";\r\nimport Card from \"../../Shared/Card/Card\";\r\n\r\nconst Root = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  filter: ${(props) =>\r\n    props.highlight ? \"drop-shadow(0 0 10px white)\" : \"brightness(0.6)\"};\r\n\r\n  --cardsCnt: ${(props) => props.cardsCnt};\r\n  --containerMaxWidth: 55vw;\r\n  .card-container {\r\n    &:not(:last-of-type) {\r\n      margin-right: calc(\r\n        -1 * max(calc((\r\n                  var(--cardWidth) * var(--cardsCnt) - var(--containerMaxWidth)\r\n                ) / (var(--cardsCnt)-1)), calc(var(--cardWidth) / 3))\r\n      );\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function CardsRow({ cards, cardProps, highlight }) {\r\n  return (\r\n    <Root layout cardsCnt={cards.length} highlight={highlight}>\r\n      {cards.map((card) => (\r\n        <div className=\"card-container\" key={card.layoutId}>\r\n          <Card\r\n            id={card.id}\r\n            layoutId={card.layoutId}\r\n            color={card.color}\r\n            digit={card.digit}\r\n            action={card.action}\r\n            width={200}\r\n            flip={card.flip}\r\n            rotationY={card.rotationY}\r\n            selectable={cardProps?.selectable}\r\n            playable={card.playable}\r\n          />\r\n        </div>\r\n      ))}\r\n    </Root>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}