{"ast":null,"code":"class _GameAudio {\n  constructor() {\n    this.musicVolume = 1;\n    this.effectsVolume = 1;\n    this.audioTracks = {};\n  }\n\n  preload(audioTracks, onload) {\n    this.audioTracks = audioTracks;\n\n    for (const url of Object.values(this.audioTracks)) {\n      var audio = new Audio();\n      audio.addEventListener(\"canplaythrough\", () => {\n        onload();\n      }, false);\n      audio.src = url;\n    }\n  }\n\n  playMusic(name) {\n    if (!this.audioTracks[name]) throw new Error(\"No Audio Track with this name\");\n    if (this.musicPlaying) return;\n    this.musicPlaying = new Audio(this.audioTracks[name]);\n    this.musicPlaying.volume = this.musicVolume * 0.5;\n    this.musicPlaying.play();\n    this.musicPlaying.loop = true;\n  }\n\n  playAudio(name) {\n    let reps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    if (!this.audioTracks[name]) throw new Error(\"No Audio Track with this name\");\n\n    for (let i = 0; i < reps; i++) {\n      setTimeout(() => {\n        let audio = new Audio(this.audioTracks[name]);\n        audio.volume = this.effectsVolume;\n        audio.play();\n      }, 200 * i);\n    }\n  }\n\n  changeMusicVolume(newVolume) {\n    this.musicVolume = newVolume;\n  }\n\n  changeEffectsVolume(newVolume) {\n    this.effectsVolume = newVolume;\n  }\n\n}\n\nconst GameAudio = new _GameAudio();\nexport default GameAudio;","map":{"version":3,"sources":["C:/Users/NCC/Desktop/WorkSpace/uno/src/utils/audio.js"],"names":["_GameAudio","musicVolume","effectsVolume","audioTracks","preload","onload","url","Object","values","audio","Audio","addEventListener","src","playMusic","name","Error","musicPlaying","volume","play","loop","playAudio","reps","i","setTimeout","changeMusicVolume","newVolume","changeEffectsVolume","GameAudio"],"mappings":"AAAA,MAAMA,UAAN,CAAiB;AAAA;AAAA,SACfC,WADe,GACD,CADC;AAAA,SAEfC,aAFe,GAEC,CAFD;AAAA,SAGfC,WAHe,GAGD,EAHC;AAAA;;AAMfC,EAAAA,OAAO,CAACD,WAAD,EAAcE,MAAd,EAAsB;AAC3B,SAAKF,WAAL,GAAmBA,WAAnB;;AACA,SAAK,MAAMG,GAAX,IAAkBC,MAAM,CAACC,MAAP,CAAc,KAAKL,WAAnB,CAAlB,EAAmD;AACjD,UAAIM,KAAK,GAAG,IAAIC,KAAJ,EAAZ;AACAD,MAAAA,KAAK,CAACE,gBAAN,CACE,gBADF,EAEE,MAAM;AACJN,QAAAA,MAAM;AACP,OAJH,EAKE,KALF;AAOAI,MAAAA,KAAK,CAACG,GAAN,GAAYN,GAAZ;AACD;AACF;;AAEDO,EAAAA,SAAS,CAACC,IAAD,EAAO;AACd,QAAI,CAAC,KAAKX,WAAL,CAAiBW,IAAjB,CAAL,EACE,MAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AAEF,QAAI,KAAKC,YAAT,EAAuB;AACvB,SAAKA,YAAL,GAAoB,IAAIN,KAAJ,CAAU,KAAKP,WAAL,CAAiBW,IAAjB,CAAV,CAApB;AACA,SAAKE,YAAL,CAAkBC,MAAlB,GAA2B,KAAKhB,WAAL,GAAmB,GAA9C;AACA,SAAKe,YAAL,CAAkBE,IAAlB;AACA,SAAKF,YAAL,CAAkBG,IAAlB,GAAyB,IAAzB;AACD;;AAEDC,EAAAA,SAAS,CAACN,IAAD,EAAiB;AAAA,QAAVO,IAAU,uEAAH,CAAG;AACxB,QAAI,CAAC,KAAKlB,WAAL,CAAiBW,IAAjB,CAAL,EACE,MAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;;AAEF,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAApB,EAA0BC,CAAC,EAA3B,EAA+B;AAC7BC,MAAAA,UAAU,CAAC,MAAM;AACf,YAAId,KAAK,GAAG,IAAIC,KAAJ,CAAU,KAAKP,WAAL,CAAiBW,IAAjB,CAAV,CAAZ;AACAL,QAAAA,KAAK,CAACQ,MAAN,GAAe,KAAKf,aAApB;AACAO,QAAAA,KAAK,CAACS,IAAN;AACD,OAJS,EAIP,MAAMI,CAJC,CAAV;AAKD;AACF;;AAEDE,EAAAA,iBAAiB,CAACC,SAAD,EAAY;AAC3B,SAAKxB,WAAL,GAAmBwB,SAAnB;AACD;;AAEDC,EAAAA,mBAAmB,CAACD,SAAD,EAAY;AAC7B,SAAKvB,aAAL,GAAqBuB,SAArB;AACD;;AAnDc;;AAsDjB,MAAME,SAAS,GAAG,IAAI3B,UAAJ,EAAlB;AAEA,eAAe2B,SAAf","sourcesContent":["class _GameAudio {\r\n  musicVolume = 1;\r\n  effectsVolume = 1;\r\n  audioTracks = {};\r\n  musicPlaying;\r\n\r\n  preload(audioTracks, onload) {\r\n    this.audioTracks = audioTracks;\r\n    for (const url of Object.values(this.audioTracks)) {\r\n      var audio = new Audio();\r\n      audio.addEventListener(\r\n        \"canplaythrough\",\r\n        () => {\r\n          onload();\r\n        },\r\n        false\r\n      );\r\n      audio.src = url;\r\n    }\r\n  }\r\n\r\n  playMusic(name) {\r\n    if (!this.audioTracks[name])\r\n      throw new Error(\"No Audio Track with this name\");\r\n\r\n    if (this.musicPlaying) return;\r\n    this.musicPlaying = new Audio(this.audioTracks[name]);\r\n    this.musicPlaying.volume = this.musicVolume * 0.5;\r\n    this.musicPlaying.play();\r\n    this.musicPlaying.loop = true;\r\n  }\r\n\r\n  playAudio(name, reps = 1) {\r\n    if (!this.audioTracks[name])\r\n      throw new Error(\"No Audio Track with this name\");\r\n\r\n    for (let i = 0; i < reps; i++) {\r\n      setTimeout(() => {\r\n        let audio = new Audio(this.audioTracks[name]);\r\n        audio.volume = this.effectsVolume;\r\n        audio.play();\r\n      }, 200 * i);\r\n    }\r\n  }\r\n\r\n  changeMusicVolume(newVolume) {\r\n    this.musicVolume = newVolume;\r\n  }\r\n\r\n  changeEffectsVolume(newVolume) {\r\n    this.effectsVolume = newVolume;\r\n  }\r\n}\r\n\r\nconst GameAudio = new _GameAudio();\r\n\r\nexport default GameAudio;\r\n"]},"metadata":{},"sourceType":"module"}