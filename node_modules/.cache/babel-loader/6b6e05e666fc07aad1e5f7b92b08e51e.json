{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NCC\\\\Desktop\\\\WorkSpace\\\\uno\\\\src\\\\Components\\\\WaitingLobby\\\\Lobby.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Paper from \"../Shared/Paper/Paper\";\nimport Avatar from \"../Shared/Avatar/Avatar\";\nimport Typography from \"../Shared/Typography/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Stack from \"@mui/material/Stack\";\nimport Loding from \"./Loding\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"../../utils/hooks\";\nimport { init, setInLobby } from \"../../stores/features/gameSlice\";\nimport { useNavigate, useLocation, Navigate } from \"react-router-dom\";\nimport API from \"../../api/API\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Span = styled.span`\n  color: #f37006;\n  text-shadow: 0 0 4px #f37006;\n  font-weight: bold;\n  font-size: larger;\n`;\n_c = Span;\n\nconst Lobby = () => {\n  _s();\n\n  const [players, setPlayers] = React.useState([]);\n  const inLobby = useSelector(state => state.game.inLobby);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    if (!inLobby) return;\n    let timeout = null;\n    let unsubInit = null;\n\n    (async () => {\n      const serverPlayers = await API.getServerPlayers();\n      setPlayers(serverPlayers);\n      API.onPlayersUpdated(players => setPlayers(players));\n      unsubInit = API.onGameInit(_ref => {\n        let {\n          players,\n          cards\n        } = _ref;\n        dispatch(init({\n          cards,\n          players\n        }));\n        timeout = setTimeout(() => navigate(\"/game\"), 2000);\n      });\n    })();\n\n    return () => {\n      if (timeout) clearTimeout(timeout);\n      if (unsubInit) unsubInit();\n      dispatch(setInLobby(false));\n    };\n  }, [dispatch, navigate, inLobby]);\n  if (location.pathname === \"/waiting-lobby\" && !inLobby) return /*#__PURE__*/_jsxDEV(Navigate, {\n    replace: true,\n    to: \"/main-menu\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Waiting for Other Players To Join\", /*#__PURE__*/_jsxDEV(Loding, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Joined ( \", /*#__PURE__*/_jsxDEV(Span, {\n            children: players.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 22\n          }, this), \"/4 )\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        container: true,\n        flexWrap: \"nowrap\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        spacing: 0.5,\n        gap: 6,\n        xs: 12,\n        children: players.map(player => {\n          return /*#__PURE__*/_jsxDEV(Stack, {\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              seed: `${player.name}${player.img}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: player.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this)]\n          }, player.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Lobby, \"0zQInLd1Mcs3PVmhRN0OvFFzOXc=\", false, function () {\n  return [useSelector, useDispatch, useNavigate, useLocation];\n});\n\n_c2 = Lobby;\nexport default Lobby;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Span\");\n$RefreshReg$(_c2, \"Lobby\");","map":{"version":3,"sources":["C:/Users/NCC/Desktop/WorkSpace/uno/src/Components/WaitingLobby/Lobby.jsx"],"names":["React","useEffect","Paper","Avatar","Typography","Grid","Stack","Loding","styled","useDispatch","useSelector","init","setInLobby","useNavigate","useLocation","Navigate","API","Span","span","Lobby","players","setPlayers","useState","inLobby","state","game","dispatch","navigate","location","timeout","unsubInit","serverPlayers","getServerPlayers","onPlayersUpdated","onGameInit","cards","setTimeout","clearTimeout","pathname","length","map","player","name","img","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,mBAAzC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,iCAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,QAAnC,QAAmD,kBAAnD;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,MAAMC,IAAI,GAAGT,MAAM,CAACU,IAAK;AACzB;AACA;AACA;AACA;AACA,CALA;KAAMD,I;;AAON,MAAME,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBrB,KAAK,CAACsB,QAAN,CAAe,EAAf,CAA9B;AAEA,QAAMC,OAAO,GAAGb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,OAAvB,CAA3B;AAEA,QAAMG,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,QAAQ,GAAGd,WAAW,EAA5B;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACsB,OAAL,EAAc;AAEd,QAAIM,OAAO,GAAG,IAAd;AACA,QAAIC,SAAS,GAAG,IAAhB;;AACA,KAAC,YAAY;AACX,YAAMC,aAAa,GAAG,MAAMf,GAAG,CAACgB,gBAAJ,EAA5B;AACAX,MAAAA,UAAU,CAACU,aAAD,CAAV;AACAf,MAAAA,GAAG,CAACiB,gBAAJ,CAAsBb,OAAD,IAAaC,UAAU,CAACD,OAAD,CAA5C;AACAU,MAAAA,SAAS,GAAGd,GAAG,CAACkB,UAAJ,CAAe,QAAwB;AAAA,YAAvB;AAAEd,UAAAA,OAAF;AAAWe,UAAAA;AAAX,SAAuB;AACjDT,QAAAA,QAAQ,CAACf,IAAI,CAAC;AAAEwB,UAAAA,KAAF;AAASf,UAAAA;AAAT,SAAD,CAAL,CAAR;AACAS,QAAAA,OAAO,GAAGO,UAAU,CAAC,MAAMT,QAAQ,CAAC,OAAD,CAAf,EAA0B,IAA1B,CAApB;AACD,OAHW,CAAZ;AAID,KARD;;AAUA,WAAO,MAAM;AACX,UAAIE,OAAJ,EAAaQ,YAAY,CAACR,OAAD,CAAZ;AACb,UAAIC,SAAJ,EAAeA,SAAS;AACxBJ,MAAAA,QAAQ,CAACd,UAAU,CAAC,KAAD,CAAX,CAAR;AACD,KAJD;AAKD,GApBQ,EAoBN,CAACc,QAAD,EAAWC,QAAX,EAAqBJ,OAArB,CApBM,CAAT;AAsBA,MAAIK,QAAQ,CAACU,QAAT,KAAsB,gBAAtB,IAA0C,CAACf,OAA/C,EACE,oBAAO,QAAC,QAAD;AAAU,IAAA,OAAO,MAAjB;AAAkB,IAAA,EAAE,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AAEF,sBACE,QAAC,KAAD;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,cAAc,EAAC,QAA/B;AAAwC,MAAA,UAAU,EAAC,QAAnD;AAA4D,MAAA,OAAO,EAAE,CAArE;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE,QAAC,UAAD;AAAA,uEAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE,QAAC,UAAD;AAAA,+CACW,QAAC,IAAD;AAAA,sBAAOH,OAAO,CAACmB;AAAf;AAAA;AAAA;AAAA;AAAA,kBADX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAYE,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,QAAQ,EAAC,QAHX;AAIE,QAAA,UAAU,EAAC,QAJb;AAKE,QAAA,cAAc,EAAC,QALjB;AAME,QAAA,OAAO,EAAE,GANX;AAOE,QAAA,GAAG,EAAE,CAPP;AAQE,QAAA,EAAE,EAAE,EARN;AAAA,kBAUGnB,OAAO,CAACoB,GAAR,CAAaC,MAAD,IAAY;AACvB,8BACE,QAAC,KAAD;AAEE,YAAA,cAAc,EAAC,QAFjB;AAGE,YAAA,UAAU,EAAC,QAHb;AAIE,YAAA,OAAO,EAAE,CAJX;AAAA,oCAME,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAG,GAAEA,MAAM,CAACC,IAAK,GAAED,MAAM,CAACE,GAAI;AAA1C;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE,QAAC,UAAD;AAAA,wBAAaF,MAAM,CAACC;AAApB;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA,aACOD,MAAM,CAACG,EADd;AAAA;AAAA;AAAA;AAAA,kBADF;AAWD,SAZA;AAVH;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CA3ED;;GAAMzB,K;UAGYT,W,EAECD,W,EACAI,W,EACAC,W;;;MAPbK,K;AA6EN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Paper from \"../Shared/Paper/Paper\";\r\nimport Avatar from \"../Shared/Avatar/Avatar\";\r\nimport Typography from \"../Shared/Typography/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Loding from \"./Loding\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"../../utils/hooks\";\r\nimport { init, setInLobby } from \"../../stores/features/gameSlice\";\r\nimport { useNavigate, useLocation, Navigate } from \"react-router-dom\";\r\nimport API from \"../../api/API\";\r\n\r\nconst Span = styled.span`\r\n  color: #f37006;\r\n  text-shadow: 0 0 4px #f37006;\r\n  font-weight: bold;\r\n  font-size: larger;\r\n`;\r\n\r\nconst Lobby = () => {\r\n  const [players, setPlayers] = React.useState([]);\r\n\r\n  const inLobby = useSelector((state) => state.game.inLobby);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (!inLobby) return;\r\n\r\n    let timeout = null;\r\n    let unsubInit = null;\r\n    (async () => {\r\n      const serverPlayers = await API.getServerPlayers();\r\n      setPlayers(serverPlayers);\r\n      API.onPlayersUpdated((players) => setPlayers(players));\r\n      unsubInit = API.onGameInit(({ players, cards }) => {\r\n        dispatch(init({ cards, players }));\r\n        timeout = setTimeout(() => navigate(\"/game\"), 2000);\r\n      });\r\n    })();\r\n\r\n    return () => {\r\n      if (timeout) clearTimeout(timeout);\r\n      if (unsubInit) unsubInit();\r\n      dispatch(setInLobby(false));\r\n    };\r\n  }, [dispatch, navigate, inLobby]);\r\n\r\n  if (location.pathname === \"/waiting-lobby\" && !inLobby)\r\n    return <Navigate replace to=\"/main-menu\" />;\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={8}>\r\n          <Typography>\r\n            Waiting for Other Players To Join\r\n            <Loding />\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <Typography>\r\n            Joined ( <Span>{players.length}</Span>/4 )\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          container\r\n          flexWrap=\"nowrap\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          spacing={0.5}\r\n          gap={6}\r\n          xs={12}\r\n        >\r\n          {players.map((player) => {\r\n            return (\r\n              <Stack\r\n                key={player.id}\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={1}\r\n              >\r\n                <Avatar seed={`${player.name}${player.img}`} />\r\n                <Typography>{player.name}</Typography>\r\n              </Stack>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Lobby;\r\n"]},"metadata":{},"sourceType":"module"}