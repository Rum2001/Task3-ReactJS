{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NCC\\\\Desktop\\\\WorkSpace\\\\Task3-ReactJS\\\\src\\\\Components\\\\Game\\\\DrawingStack\\\\DrawingStack.jsx\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport Card from \"../../Shared/Card/Card\";\nimport FrontCards from \"./FrontCards\";\nimport { motion } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"../../../utils/hooks\";\nimport { ready } from \"../../../stores/features/gameSlice\";\nimport API from \"../../../api/API\";\nimport GameAudio from \"../../../utils/audio\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst variants = {\n  init: {\n    x: 0,\n    y: 0\n  },\n  idleCenter: {\n    x: \"calc(50vw - 50%)\",\n    y: \"calc(-1 * 50vh + 50% )\"\n  },\n  idleCorner: {\n    x: \"10px\",\n    y: \"70px\"\n  },\n  idleCornerDisabled: {\n    x: \"10px\",\n    y: \"80%\",\n    transition: {\n      duration: 1\n    }\n  },\n  hover: {\n    scale: 1.05,\n    transition: {\n      duration: 0.3\n    }\n  }\n};\nconst Root = styled.div`\n  --cardWidth: var(--cardWidthBigger);\n\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  transform: translate(-50%, 50%);\n\n  width: var(--cardWidth);\n  height: calc(var(--cardWidth) * 1.41);\n  z-index: 10;\n\n  cursor: ${props => props.canHover ? \"pointer\" : \"initial\"};\n  filter: ${props => !props.highlight ? \"contrast(.5)\" : \"drop-shadow(0 0 10px white)\"};\n\n  .card-container {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n  }\n`;\n_c = Root;\nexport default function DrawingStack() {\n  _s();\n\n  const {\n    drawingStack,\n    currentPlayer\n  } = useSelector(state => ({\n    drawingStack: state.game.drawingStack,\n    currentPlayer: state.game.currentPlayer\n  }));\n  const dispatch = useDispatch();\n  const [gameStarted, setGameStarted] = useState(false);\n\n  const handleClick = () => {\n    if (currentPlayer === 0) API.move(true);\n  };\n\n  useEffect(() => {\n    setTimeout(() => GameAudio.playAudio(\"shuffle\"), 1800);\n    setTimeout(() => {\n      dispatch(ready());\n      setGameStarted(true);\n    }, 2000);\n  }, [dispatch]);\n  const canHover = gameStarted && currentPlayer === 0;\n  const highlight = canHover || !gameStarted;\n  return /*#__PURE__*/_jsxDEV(Root, {\n    as: motion.div,\n    onClick: handleClick,\n    canHover: canHover,\n    highlight: highlight,\n    gameStarted: gameStarted,\n    variants: variants,\n    initial: \"init\",\n    animate: gameStarted ? canHover ? \"idleCorner\" : \"idleCornerDisabled\" : \"idleCenter\",\n    whileHover: canHover ? \"hover\" : {\n      scale: 1\n    },\n    children: [drawingStack.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        layoutId: card.layoutId,\n        color: card.color,\n        digit: card.digit,\n        action: card.action,\n        width: 200,\n        disableShadow: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, card.layoutId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(FrontCards, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DrawingStack, \"7foQXRDitQEjaMFZVePvmuk3LcA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c2 = DrawingStack;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Root\");\n$RefreshReg$(_c2, \"DrawingStack\");","map":{"version":3,"sources":["C:/Users/NCC/Desktop/WorkSpace/Task3-ReactJS/src/Components/Game/DrawingStack/DrawingStack.jsx"],"names":["styled","Card","FrontCards","motion","useEffect","useState","useDispatch","useSelector","ready","API","GameAudio","variants","init","x","y","idleCenter","idleCorner","idleCornerDisabled","transition","duration","hover","scale","Root","div","props","canHover","highlight","DrawingStack","drawingStack","currentPlayer","state","game","dispatch","gameStarted","setGameStarted","handleClick","move","setTimeout","playAudio","map","card","layoutId","color","digit","action"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\r\nimport Card from \"../../Shared/Card/Card\";\r\nimport FrontCards from \"./FrontCards\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"../../../utils/hooks\";\r\nimport { ready } from \"../../../stores/features/gameSlice\";\r\nimport API from \"../../../api/API\";\r\nimport GameAudio from \"../../../utils/audio\";\r\n\r\nconst variants = {\r\n  init: { x: 0, y: 0 },\r\n  idleCenter: { x: \"calc(50vw - 50%)\", y: \"calc(-1 * 50vh + 50% )\" },\r\n  idleCorner: { x: \"10px\", y: \"70px\" },\r\n  idleCornerDisabled: { x: \"10px\", y: \"80%\", transition: { duration: 1 } },\r\n\r\n  hover: { scale: 1.05, transition: { duration: 0.3 } },\r\n};\r\n\r\nconst Root = styled.div`\r\n  --cardWidth: var(--cardWidthBigger);\r\n\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  transform: translate(-50%, 50%);\r\n\r\n  width: var(--cardWidth);\r\n  height: calc(var(--cardWidth) * 1.41);\r\n  z-index: 10;\r\n\r\n  cursor: ${(props) => (props.canHover ? \"pointer\" : \"initial\")};\r\n  filter: ${(props) =>\r\n    !props.highlight ? \"contrast(.5)\" : \"drop-shadow(0 0 10px white)\"};\r\n\r\n  .card-container {\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n  }\r\n`;\r\n\r\nexport default function DrawingStack() {\r\n  const { drawingStack, currentPlayer } = useSelector((state) => ({\r\n    drawingStack: state.game.drawingStack,\r\n    currentPlayer: state.game.currentPlayer,\r\n  }));\r\n  const dispatch = useDispatch();\r\n\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    if (currentPlayer === 0) API.move(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => GameAudio.playAudio(\"shuffle\"), 1800);\r\n    setTimeout(() => {\r\n      dispatch(ready());\r\n      setGameStarted(true);\r\n    }, 2000);\r\n  }, [dispatch]);\r\n\r\n  const canHover = gameStarted && currentPlayer === 0;\r\n  const highlight = canHover || !gameStarted;\r\n\r\n  return (\r\n    <Root\r\n      as={motion.div}\r\n      onClick={handleClick}\r\n      canHover={canHover}\r\n      highlight={highlight}\r\n      gameStarted={gameStarted}\r\n      variants={variants}\r\n      initial=\"init\"\r\n      animate={\r\n        gameStarted\r\n          ? canHover\r\n            ? \"idleCorner\"\r\n            : \"idleCornerDisabled\"\r\n          : \"idleCenter\"\r\n      }\r\n      whileHover={canHover ? \"hover\" : { scale: 1 }}\r\n    >\r\n      {drawingStack.map((card) => (\r\n        <div className=\"card-container\" key={card.layoutId}>\r\n          <Card\r\n            layoutId={card.layoutId}\r\n            color={card.color}\r\n            digit={card.digit}\r\n            action={card.action}\r\n            width={200}\r\n            disableShadow={true}\r\n          />\r\n        </div>\r\n      ))}\r\n      <FrontCards />\r\n    </Root>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}